version: "3.7"

services:
  app:
    build:
      context: .
      args:
        - ENV=test
    container_name: tile-cache_test
    volumes:
      - ./app:/app/app:ro
      - ./lambdas:/app/lambdas:ro
      - ./tests:/app/tests
      - ./terraform:/app/terraform
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DATABASE_RO=_test
      - DB_USER_RO=gfw
      - DB_PASSWORD_RO=postgres  # pragma: allowlist secret
      - DB_PORT_RO=5432
      - DB_HOST_RO=test_database
      - LOG_LEVEL=debug
      - AWS_ACCESS_KEY_ID=testing  # pragma: allowlist secret
      - AWS_SECRET_ACCESS_KEY=testing  # pragma: allowlist secret
      - AWS_SECURITY_TOKEN=testing  # pragma: allowlist secret
      - AWS_SESSION_TOKEN=testing  # pragma: allowlist secret
      - AWS_ENDPOINT_URI=http://localstack:4566
      - LOCALSTACK_HOSTNAME=localstack
      - HTTPX_TIMEOUT=60
      - RASTER_TILER_LAMBDA_NAME=test_project-lambda-tiler
      - ENV=test
      - BUCKET=gfw-tiles-test
      - DATA_LAKE_BUCKET=gfw-data-lake-test
      - PLANET_API_KEY
    entrypoint: /app/tests/run_tests.sh
    depends_on:
      - test_database
      - localstack

  test_database:
    container_name: gfw-tile-cache-test-database
    image: postgis/postgis:11-3.0-alpine
    ports:
      - 54322:5432
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_DB=_test
      - POSTGRES_USER=gfw
      - POSTGRES_PASSWORD=postgres  # pragma: allowlist secret
    volumes:
      - test_database_data:/var/lib/postgresql/data
    restart: on-failure

  localstack:
    image: localstack/localstack:0.12.11
    container_name: localstack
    ports:
      - '443:443'
      - '4563-4584:4563-4584'
      - '8055:8080'
      - '${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}'
    environment:
      - SERVICES=iam,lambda,sts,cloudwatch,events,s3,logs
      - DEBUG=1
      - DISABLE_EVENTS=1
      - LAMBDA_DOCKER_NETWORK=gfw-tile-cache_test_default
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY}
      - LAMBDA_REMOTE_DOCKER=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOSTNAME_EXTERNAL=localstack
      - HOSTNAME=localstack
    volumes:
      - "${TMPDIR:-./localstack}:/tmp/localstack"
      - '/var/run/docker.sock:/var/run/docker.sock'

volumes:
  test_database_data:
